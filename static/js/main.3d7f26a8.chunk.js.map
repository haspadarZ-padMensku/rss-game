{"version":3,"sources":["components/screens/Home/Sections/Login.js","components/screens/Home/Home.js","components/screens/Battle/Player/Hero/Hero.js","components/screens/Battle/Player/Enemy/Enemy.js","components/screens/Battle/Player/HealthBar/HealthBar.js","components/screens/Battle/Player/Player.js","components/screens/Battle/ControlPanel/ControlPanel.js","components/tasks/TaskList.js","components/helpers/getRandomInt.js","components/tasks/Math/generateMathTask.js","components/tasks/Math/Math.js","components/tasks/English/generateEnglishTask.js","components/tasks/English/English.js","components/tasks/Russian/generateRussianTask.js","components/tasks/Russian/Russian.js","components/ModalDialog/ModalDialog.js","components/screens/Battle/Battle.js","components/screens/Score/TableRow.js","components/screens/Score/Score.js","components/loading/Spinner.js","components/Game.js","index.js"],"names":["Login","state","heroName","onFormSubmit","event","preventDefault","_this","props","onSubmit","_this2","this","react_default","a","createElement","className","htmlFor","style","textAlign","fontSize","id","type","value","onChange","e","setState","target","autoFocus","React","Component","Home","onLoginSubmit","name","player","page","Sections_Login","Hero","concat","animation","Enemy","HealthBar","width","health","Player","hp","changeHP","checkLive","reload","changeAnimation","_callee","regenerator_default","wrap","_context","prev","next","stop","componentDidMount","initPlayer","level","_callee2","_context2","setRecord","console","log","nextLevel","renderPlayer","Player_HealthBar_HealthBar","Player_Hero_Hero","Player_Enemy_Enemy","ControlPanel","onButtonClick","setIsDisplayModalDialog","onClick","TaskList","onButtonMathClick","changeCurrentContent","onButtonEnglishClick","onButtonRussianClick","getRandomInt","min","max","Math","floor","random","generateMathTask","result","operations","firstNumber","secondNumber","operation","length","task","userAnswer","onInputChange","enemy","hero","placeholder","englishWords","translate","apple","pear","orange","banana","lemon","pineapple","grapes","kiwi","carrot","onion","tomato","cabbage","potato","cucumber","dog","cat","snake","hamster","rabbit","goat","pig","sheep","horse","cow","goose","chicken","duck","fox","wolf","bear","elephant","tiger","lion","crocodile","giraffe","generateEnglishTask","round","englishWord","translateWord","English","includes","toLowerCase","russianWords","яблоко","груша","апельсин","банан","лимон","ананас","виноград","киви","морковь","лук","томат","капуста","картошка","огурец","собака","кошка","змея","хомяк","кролик","козел","свинья","овца","лошадь","корова","гусь","курица","утка","лиса","волк","медведь","слон","тигр","лев","крокодил","жираф","russianWord","Russian","generateRussianTask","ModalDialog","currentContent","content","onButtonCloseCLick","renderContent","components_tasks_TaskList","tasks_Math_Math","tasks_English_English","tasks_Russian_Russian","Battle","isDisplayModalDialog","getEnemyName","displayModalDialog","components_ModalDialog_ModalDialog","boolean","onKeyPress","key","Battle_Player_Player","Battle_ControlPanel_ControlPanel","TableRow","position","data","Score","records","rows","sortRecords","sort","b","i","push","Score_TableRow","Spinner","message","defaultProps","Game","currentPage","changeCurrentPage","addPlayer","Object","toConsumableArray","screens_Home_Home","screens_Battle_Battle","screens_Score_Score","loading_Spinner","renderCurrentPage","ReactDOM","render","components_Game","document","querySelector"],"mappings":"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","file":"static/js/main.3d7f26a8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Login extends React.Component {\r\n  state = { heroName: '' };\r\n\r\n  onFormSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.heroName);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.onFormSubmit} className=\"ui form\">\r\n          <div className=\"field\">\r\n            <label htmlFor=\"login-input\" style={{textAlign: \"center\", fontSize: \"20px\"}}>Type your name:</label>\r\n            <input\r\n              id=\"login-input\"\r\n              type=\"text\"\r\n              value={this.state.heroName}\r\n              onChange={e => this.setState({ heroName: e.target.value })}\r\n              autoFocus={true}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport Login from './Sections/Login';\r\nimport './Home.css';\r\n\r\nclass Home extends React.Component {\r\n  onLoginSubmit = name => {\r\n    this.props.player(name);\r\n    this.props.page('Battle');\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"page-container\">\r\n        <h1>Play the game?</h1>\r\n        <Login onSubmit={this.onLoginSubmit} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport './Hero.css';\r\n\r\nclass Hero extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"hero-container\">\r\n        <i className={`hero ${this.props.animation}`} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Hero;\r\n","import React from 'react';\r\nimport './Enemy.css';\r\n\r\nclass Enemy extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"enemy-container\">\r\n        <i className={`enemy ${this.props.animation}`} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Enemy;\r\n","import React from 'react';\r\nimport './HealthBar.css';\r\n\r\nclass HealthBar extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"health-bar\">\r\n        <div className=\"health-bar__indicator\">\r\n          <div style={{ width: `${this.props.health}%` }}>\r\n            {this.props.health} %\r\n          </div>\r\n        </div>\r\n        <h3>{this.props.name}</h3>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HealthBar;\r\n","import React from 'react';\r\nimport Hero from './Hero/Hero';\r\nimport Enemy from './Enemy/Enemy';\r\nimport HealthBar from './HealthBar/HealthBar';\r\nimport './Player.css';\r\n\r\nclass Player extends React.Component {\r\n  state = {\r\n    type: this.props.type,\r\n    name: this.props.name,\r\n    hp: 100,\r\n    changeHP: () => {\r\n      this.changeHP();\r\n    },\r\n    checkLive: () => {\r\n      this.checkLive();\r\n    },\r\n    reload: () => {\r\n      this.reload();\r\n    },\r\n    animation: 'stand', //'stand' 'attack' 'hit' 'die'\r\n    changeAnimation: (animation) => this.changeAnimation(animation)\r\n  };\r\n\r\n  changeHP = () => {\r\n    let hp = this.state.hp;\r\n    if (hp > 0) {\r\n      this.setState({ hp: hp - 20 });\r\n    }\r\n  };\r\n\r\n  changeAnimation = async (animation) => {\r\n    await this.setState({ animation: animation});\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.props.initPlayer(this.state);\r\n  };\r\n\r\n  reload = () => {\r\n    this.setState({ hp: 100 + 10 * this.props.level });\r\n  };\r\n\r\n  checkLive = async () => {\r\n    if (this.state.type === 'Hero') {\r\n      if (this.state.hp === 0) {\r\n        await this.props.setRecord(this.props.name, this.props.level);\r\n        this.props.page('Score');\r\n        console.log('Game over');\r\n      }\r\n    }\r\n\r\n    if (this.state.type === 'Enemy') {\r\n      if (this.state.hp === 0) {\r\n        //NEXT LEVEL\r\n        console.log('Next Level');\r\n        this.props.nextLevel();\r\n        this.reload();\r\n      }\r\n    }\r\n  };\r\n\r\n  renderPlayer = type => {\r\n    if (type === 'Hero') {\r\n      return (\r\n        <div className=\"player-container\">\r\n          <HealthBar health={this.state.hp} name={this.state.name} />\r\n          <Hero animation={this.state.animation} />\r\n        </div>\r\n      );\r\n    }\r\n    if (type === 'Enemy') {\r\n      return (\r\n        <div className=\"player-container\">\r\n          <HealthBar health={this.state.hp} name={this.state.name} />\r\n          <Enemy animation={this.state.animation} />\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return this.renderPlayer(this.state.type);\r\n  }\r\n}\r\n\r\nexport default Player;\r\n","import React from 'react';\r\nimport './ControlPanel.css';\r\n\r\nclass ControlPanel extends React.Component {\r\n  onButtonClick = () => {\r\n    this.props.setIsDisplayModalDialog(true);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"control-panel\">\r\n        <button onClick={this.onButtonClick} autoFocus={true}>Attack</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ControlPanel;\r\n","import React from 'react';\r\nimport './TaskList.css';\r\n\r\nclass TaskList extends React.Component {\r\n\r\n  onButtonMathClick = () => {\r\n    this.props.changeCurrentContent('Math');\r\n  }\r\n\r\n  onButtonEnglishClick = () => {\r\n    this.props.changeCurrentContent('English');\r\n  }\r\n\r\n  onButtonRussianClick = () => {\r\n    this.props.changeCurrentContent('Russian');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"task-list-container\">\r\n        <button onClick={this.onButtonMathClick} autoFocus={true}>Math</button>\r\n        <button onClick={this.onButtonEnglishClick}>English into Russian</button>\r\n        <button onClick={this.onButtonRussianClick}>Russian into English</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskList;\r\n","export default function getRandomInt(min, max) {\r\n  return Math.floor(Math.random() * (max - min)) + min;\r\n}","import getRandomInt from '../../helpers/getRandomInt';\r\n\r\nfunction generateMathTask() {\r\n  const operations = ['+', '-', '*'];\r\n  const firstNumber = getRandomInt(0, 100);\r\n  const secondNumber = getRandomInt(0, 100);\r\n  const operation = operations[getRandomInt(0, operations.length)];\r\n  let result;\r\n  switch (operation) {\r\n    case '+': result = firstNumber + secondNumber; break;\r\n    case '-': result = firstNumber - secondNumber; break;\r\n    case '*': result = firstNumber * secondNumber; break;\r\n    default: break;\r\n  }\r\n  return {\r\n    firstNumber: firstNumber,\r\n    secondNumber: secondNumber,\r\n    operation: operation,\r\n    result: result\r\n  }\r\n}\r\n\r\nexport default generateMathTask;\r\n","import React from 'react';\r\nimport './Math.css';\r\nimport generateMathTask from './generateMathTask';\r\n\r\nclass Math extends React.Component {\r\n  state = {\r\n    task: {},\r\n    userAnswer: ''\r\n  };\r\n\r\n  onInputChange = event => {\r\n    this.setState({\r\n      userAnswer: event.target.value\r\n    });\r\n  };\r\n\r\n  onFormSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    if (+this.state.userAnswer === this.state.task.result) {\r\n      await this.props.enemy.changeHP();\r\n      if (this.props.enemy.hp === 0) {\r\n        await this.props.enemy.changeAnimation('die');\r\n      } else {\r\n        await this.props.enemy.changeAnimation('hit');\r\n\r\n        this.props.enemy.changeAnimation('stand');\r\n      }\r\n\r\n      await this.props.enemy.checkLive();\r\n\r\n      this.props.setIsDisplayModalDialog(false);\r\n    } else {\r\n      await this.props.hero.changeHP();\r\n\r\n      if (this.props.hero.hp === 0) {\r\n        await this.props.hero.changeAnimation('die');\r\n      } else {\r\n        await this.props.hero.changeAnimation('hit');\r\n\r\n        this.props.hero.changeAnimation('stand');\r\n      }\r\n\r\n      await this.props.hero.checkLive();\r\n\r\n      this.props.setIsDisplayModalDialog(false);\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ task: generateMathTask() });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"math\">\r\n        <div className=\"math-content\">\r\n          {this.state.task.firstNumber} {this.state.task.operation}\r\n          {this.state.task.secondNumber} = {this.state.userAnswer}\r\n        </div>\r\n        <form className=\"answer-form ui form\" onSubmit={this.onFormSubmit}>\r\n          <label>Type your answer:</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"...\"\r\n            autoFocus={true}\r\n            onChange={this.onInputChange}\r\n            value={this.state.userAnswer}\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Math;\r\n","const englishWords = [\r\n  'apple', 'pear', 'orange', 'banana', 'lemon', 'pineapple',\r\n  'grapes', 'kiwi', 'carrot', 'onion', 'tomato', 'cabbage',\r\n  'potato', 'cucumber', 'dog', 'cat', 'snake', 'hamster',\r\n  'rabbit', 'goat', 'pig', 'sheep', 'horse', 'cow', 'goose',\r\n  'chicken', 'duck', 'fox', 'wolf', 'bear', 'elephant', 'tiger',\r\n  'lion', 'crocodile', 'giraffe'\r\n];\r\n\r\nconst translate = {\r\n  'apple': ['яблоко'],\r\n  'pear': ['груша'],\r\n  'orange': ['апельсин', 'оранжевый'],\r\n  'banana': ['банан'],\r\n  'lemon': ['лимон'],\r\n  'pineapple': ['ананас'],\r\n  'grapes': ['виноград'],\r\n  'kiwi': ['киви'],\r\n  'carrot': ['морковь', 'морковка'],\r\n  'onion': ['лук', 'луковица'],\r\n  'tomato': ['томат', 'помидор'],\r\n  'cabbage': ['капуста'],\r\n  'potato': ['картошка', 'картофель', 'картофелина'],\r\n  'cucumber': ['огурец'],\r\n  'dog': ['собака', 'пес', 'собачка', 'псина', 'кобель'],\r\n  'cat': ['кошка', 'кот', 'котик', 'котенок'],\r\n  'snake': ['змея', 'змей'],\r\n  'hamster': ['хомяк'],\r\n  'rabbit': ['кролик', 'заяц'],\r\n  'goat': ['коза', 'козел', 'осел'],\r\n  'pig': ['свинья', 'поросенок', 'хрюшка'],\r\n  'sheep': ['овца', 'овечка', 'баран'],\r\n  'horse': ['лошадь', 'конь'],\r\n  'cow': ['корова'],\r\n  'goose': ['гусь', 'гусыня'],\r\n  'chicken': ['курица', 'цыпленок', 'петух'],\r\n  'duck': ['утка'],\r\n  'fox': ['лиса', 'лисица'],\r\n  'wolf': ['волк'],\r\n  'bear': ['медведь'],\r\n  'elephant': ['слон'],\r\n  'tiger': ['тигр'],\r\n  'lion': ['лев'],\r\n  'crocodile': ['крокодил'],\r\n  'giraffe': ['жираф']\r\n};\r\n\r\nfunction generateEnglishTask() {\r\n  const task =  englishWords[Math.round(0 - 0.5 + Math.random() * (englishWords.length - 1 + 1))];\r\n  return {\r\n    englishWord: task,\r\n    translateWord: translate[task]\r\n  }\r\n}\r\n\r\nexport default generateEnglishTask;\r\n","import React from 'react';\r\nimport './English.css';\r\nimport generateEnglishTask from './generateEnglishTask';\r\n\r\nclass English extends React.Component {\r\n  state = {\r\n    task: {},\r\n    userAnswer: ''\r\n  };\r\n\r\n  onInputChange = event => {\r\n    this.setState({\r\n      userAnswer: event.target.value\r\n    });\r\n  };\r\n\r\n  onFormSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    if (\r\n      this.state.task.translateWord.includes(\r\n        this.state.userAnswer.toLowerCase()\r\n      )\r\n    ) {\r\n      await this.props.enemy.changeHP();\r\n      if (this.props.enemy.hp === 0) {\r\n        await this.props.enemy.changeAnimation('die');\r\n      } else {\r\n        await this.props.enemy.changeAnimation('hit');\r\n\r\n        this.props.enemy.changeAnimation('stand');\r\n      }\r\n\r\n      await this.props.enemy.checkLive();\r\n\r\n      this.props.setIsDisplayModalDialog(false);\r\n    } else {\r\n      await this.props.hero.changeHP();\r\n\r\n      if (this.props.hero.hp === 0) {\r\n        await this.props.hero.changeAnimation('die');\r\n      } else {\r\n        await this.props.hero.changeAnimation('hit');\r\n\r\n        this.props.hero.changeAnimation('stand');\r\n      }\r\n\r\n      await this.props.hero.checkLive();\r\n\r\n      this.props.setIsDisplayModalDialog(false);\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ task: generateEnglishTask() });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"english\">\r\n        <div className=\"english-content\">{this.state.task.englishWord}</div>\r\n        <form className=\"answer-form ui form\" onSubmit={this.onFormSubmit}>\r\n          <label>Type your answer:</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"...\"\r\n            autoFocus={true}\r\n            onChange={this.onInputChange}\r\n            value={this.state.userAnswer}\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default English;\r\n","const russianWords = [\r\n  'яблоко', 'груша', 'апельсин', 'банан', 'лимон', 'ананас',\r\n  'виноград', 'киви', 'морковь', 'лук', 'томат', 'капуста',\r\n  'картошка', 'огурец', 'собака', 'кошка', 'змея', 'хомяк',\r\n  'кролик', 'козел', 'свинья', 'овца', 'лошадь', 'корова', 'гусь',\r\n  'курица', 'утка', 'лиса', 'волк', 'медведь', 'слон', 'тигр',\r\n  'лев', 'крокодил', 'жираф'\r\n];\r\n\r\nconst translate = {\r\n  'яблоко': ['apple'],\r\n  'груша': ['pear'],\r\n  'апельсин': ['orange'],\r\n  'банан': ['banana'],\r\n  'лимон': ['lemon'],\r\n  'ананас': ['pineapple'],\r\n  'виноград': ['grapes'],\r\n  'киви': ['kiwi'],\r\n  'морковь': ['carrot'],\r\n  'лук': ['onion'],\r\n  'томат': ['tomato'],\r\n  'капуста': ['cabbage'],\r\n  'картошка': ['potato'],\r\n  'огурец': ['cucumber'],\r\n  'собака': ['dog'],\r\n  'кошка': ['cat'],\r\n  'змея': ['snake'],\r\n  'хомяк': ['hamster'],\r\n  'кролик': ['rabbit'],\r\n  'козел': ['goat'],\r\n  'свинья': ['pig'],\r\n  'овца': ['sheep'],\r\n  'лошадь': ['horse'],\r\n  'корова': ['cow'],\r\n  'гусь': ['goose'],\r\n  'курица': ['chicken'],\r\n  'утка': ['duck'],\r\n  'лиса': ['fox'],\r\n  'волк': ['wolf'],\r\n  'медведь': ['bear'],\r\n  'слон': ['elephant'],\r\n  'тигр': ['tiger'],\r\n  'лев': ['lion'],\r\n  'крокодил': ['crocodile'],\r\n  'жираф' : ['giraffe']\r\n};\r\n\r\n\r\nfunction generateEnglishTask() {\r\n  const task =  russianWords[Math.round(0 - 0.5 + Math.random() * (russianWords.length - 1 + 1))];\r\n  return {\r\n    russianWord: task,\r\n    translateWord: translate[task]\r\n  }\r\n}\r\n\r\nexport default generateEnglishTask;\r\n","import React from 'react';\r\nimport './Russian.css';\r\nimport generateRussianTask from './generateRussianTask';\r\n\r\nclass Russian extends React.Component {\r\n  state = {\r\n    task: {},\r\n    userAnswer: ''\r\n  };\r\n\r\n  onInputChange = event => {\r\n    this.setState({\r\n      userAnswer: event.target.value\r\n    });\r\n  };\r\n\r\n  onFormSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    if (\r\n      this.state.task.translateWord.includes(\r\n        this.state.userAnswer.toLowerCase()\r\n      )\r\n    ) {\r\n      await this.props.enemy.changeHP();\r\n      if (this.props.enemy.hp === 0) {\r\n        await this.props.enemy.changeAnimation('die');\r\n      } else {\r\n        await this.props.enemy.changeAnimation('hit');\r\n\r\n        this.props.enemy.changeAnimation('stand');\r\n      }\r\n\r\n      await this.props.enemy.checkLive();\r\n\r\n      this.props.setIsDisplayModalDialog(false);\r\n    } else {\r\n      await this.props.hero.changeHP();\r\n\r\n      if (this.props.hero.hp === 0) {\r\n        await this.props.hero.changeAnimation('die');\r\n      } else {\r\n        await this.props.hero.changeAnimation('hit');\r\n\r\n        this.props.hero.changeAnimation('stand');\r\n      }\r\n\r\n      await this.props.hero.checkLive();\r\n\r\n      this.props.setIsDisplayModalDialog(false);\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ task: generateRussianTask() });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"russian\">\r\n        <div className=\"russian-content\">{this.state.task.russianWord}</div>\r\n        <form className=\"answer-form ui form\" onSubmit={this.onFormSubmit}>\r\n          <label>Type your answer:</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"...\"\r\n            autoFocus={true}\r\n            onChange={this.onInputChange}\r\n            value={this.state.userAnswer}\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Russian;\r\n","import React from 'react';\r\nimport './ModalDialog.css';\r\nimport TaskList from '../tasks/TaskList';\r\nimport Math from '../tasks/Math/Math';\r\nimport English from '../tasks/English/English';\r\nimport Russian from '../tasks/Russian/Russian';\r\n\r\nclass ModalDialog extends React.Component {\r\n  state = {\r\n    //'TaskList', 'Math', 'English'\r\n    currentContent: 'TaskList'\r\n  };\r\n\r\n  changeCurrentContent = content => {\r\n    this.setState({ currentContent: content });\r\n  };\r\n\r\n  onButtonCloseCLick = () => {\r\n    this.props.setIsDisplayModalDialog(false);\r\n  };\r\n\r\n  renderContent = () => {\r\n    if (this.state.currentContent === 'TaskList') {\r\n      return (\r\n        <TaskList\r\n          setIsDisplayModalDialog={this.props.setIsDisplayModalDialog}\r\n          changeCurrentContent={this.changeCurrentContent}\r\n        />\r\n      );\r\n    }\r\n    if (this.state.currentContent === 'Math') {\r\n      return (\r\n        <Math\r\n          setIsDisplayModalDialog={this.props.setIsDisplayModalDialog}\r\n          hero={this.props.hero}\r\n          enemy={this.props.enemy}\r\n          nextLevel={this.props.nextLevel}\r\n        />\r\n      );\r\n    }\r\n    if (this.state.currentContent === 'English') {\r\n      return (\r\n        <English\r\n          setIsDisplayModalDialog={this.props.setIsDisplayModalDialog}\r\n          hero={this.props.hero}\r\n          enemy={this.props.enemy}\r\n          nextLevel={this.props.nextLevel}\r\n        />\r\n      );\r\n    }\r\n\r\n    if (this.state.currentContent === 'Russian') {\r\n      return (\r\n        <Russian\r\n          setIsDisplayModalDialog={this.props.setIsDisplayModalDialog}\r\n          hero={this.props.hero}\r\n          enemy={this.props.enemy}\r\n          nextLevel={this.props.nextLevel}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"modal-dialog-container\">\r\n        <button className=\"btn-close\" onClick={this.onButtonCloseCLick}>\r\n          x\r\n        </button>\r\n        <div className=\"modal-dialog\">{this.renderContent()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModalDialog;\r\n","import React from 'react';\r\nimport './Battle.css';\r\nimport Player from './Player/Player';\r\nimport ControlPanel from './ControlPanel/ControlPanel';\r\nimport ModalDialog from '../../ModalDialog/ModalDialog';\r\n\r\nclass Battle extends React.Component {\r\n  state = {\r\n    hero: {},\r\n    enemy: {},\r\n    level: 1,\r\n    isDisplayModalDialog: false\r\n  };\r\n\r\n  initPlayer = player => {\r\n    if (player.type === 'Hero') {\r\n      this.setState({ hero: player });\r\n    }\r\n\r\n    if (player.type === 'Enemy') {\r\n      this.setState({ enemy: player });\r\n    }\r\n  };\r\n\r\n  getEnemyName = () => {\r\n    return 'Enemy';\r\n  };\r\n\r\n  nextLevel = async () => {\r\n    await this.setState({ level: this.state.level + 1 });\r\n    this.props.nextLevel(this.state.level);\r\n  };\r\n\r\n  displayModalDialog = () => {\r\n    if (this.state.isDisplayModalDialog) {\r\n      return (\r\n        <ModalDialog\r\n          setIsDisplayModalDialog={this.setIsDisplayModalDialog}\r\n          hero={this.state.hero}\r\n          enemy={this.state.enemy}\r\n          nextLevel={this.nextLevel}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  setIsDisplayModalDialog = boolean => {\r\n    this.setState({ isDisplayModalDialog: boolean });\r\n  };\r\n\r\n  onKeyPress = event => {\r\n    if (event.key === 'Enter') {\r\n      this.setState({ isDisplayModalDialog: true });\r\n    }\r\n    if (event.key === 'Escape') {\r\n      this.setState({ isDisplayModalDialog: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div onKeyPress={this.onKeyPress} className=\"battle-container\">\r\n        <section>\r\n          <header className=\"battle-header\">\r\n            <h1>\r\n              Battle: {this.state.hero.name} vs {this.state.enemy.name}\r\n            </h1>\r\n            <h2>Level {this.state.level}</h2>\r\n          </header>\r\n          <nav className=\"battle-nav\">\r\n            <button onClick={() => this.props.page('Home')}>Go home</button>\r\n          </nav>\r\n        </section>\r\n        <section className=\"battle-field\">\r\n          <Player\r\n            type=\"Hero\"\r\n            initPlayer={this.initPlayer}\r\n            name={this.props.heroName}\r\n            level={this.props.level}\r\n            nextLevel={this.nextLevel}\r\n            page={this.props.page}\r\n            setRecord={this.props.setRecord}\r\n          />\r\n          <ControlPanel\r\n            setIsDisplayModalDialog={this.setIsDisplayModalDialog}\r\n          />\r\n          {this.displayModalDialog()}\r\n          <Player\r\n            type=\"Enemy\"\r\n            initPlayer={this.initPlayer}\r\n            name={this.getEnemyName()}\r\n            level={this.props.level}\r\n            nextLevel={this.nextLevel}\r\n            page={this.props.page}\r\n            setRecord={this.props.setRecord}\r\n          />\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Battle;\r\n","import React from 'react';\r\n\r\nconst TableRow = props => {\r\n  return (\r\n    <tr>\r\n      <td>{props.position + 1}</td>\r\n      <td>{props.data.name}</td>\r\n      <td>{props.data.level}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default TableRow;\r\n","import React from 'react';\r\nimport './Score.css';\r\nimport TableRow from './TableRow';\r\n\r\nclass Score extends React.Component {\r\n  state = { records: this.props.records };\r\n\r\n  render() {\r\n    let rows = [];\r\n\r\n    let sortRecords = this.state.records.sort((a, b) => b.level - a.level);\r\n\r\n    for (let i = 0; i < sortRecords.length; i++) {\r\n      if (i < 10) {\r\n        rows.push(<TableRow key={i} data={sortRecords[i]} position={i} />);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"score-container\">\r\n        <h1>Score</h1>\r\n        <button onClick={() => this.props.page('Home')}>Home</button>\r\n        <button onClick={() => this.props.page('Battle')}>Try again?</button>\r\n        <table className=\"score\">\r\n          <tbody>\r\n            <tr>\r\n              <th>Position</th>\r\n              <th>Name</th>\r\n              <th>Level</th>\r\n            </tr>\r\n            {rows}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Score;\r\n","import React from 'react'\r\n\r\nconst Spinner = (props) => {\r\n  return (\r\n    <div className=\"ui active dimmer\">\r\n      <div className=\"ui big text loader\">{props.message}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSpinner.defaultProps = {\r\n  message: 'Loading...'\r\n}\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport Home from './screens/Home/Home';\r\nimport Battle from './screens/Battle/Battle';\r\nimport Score from './screens/Score/Score';\r\nimport Spinner from './loading/Spinner';\r\n\r\nclass Game extends React.Component {\r\n  state = {\r\n    currentPage: 'Home',\r\n    heroName: '',\r\n    level: 1,\r\n    records: []\r\n  };\r\n\r\n  nextLevel = level => {\r\n    this.setState({ level: level });\r\n  };\r\n\r\n  changeCurrentPage = page => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  addPlayer = name => {\r\n    name === ''\r\n      ? this.setState({ heroName: 'Hero' })\r\n      : this.setState({ heroName: name });\r\n  };\r\n\r\n  setRecord = (name, level) => {\r\n    this.setState({\r\n      records: [...this.state.records, { name: name, level: level }]\r\n    });\r\n  };\r\n\r\n  renderCurrentPage() {\r\n    if (this.state.currentPage === 'Home') {\r\n      return (\r\n        <div>\r\n          <Home page={this.changeCurrentPage} player={this.addPlayer} />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (this.state.currentPage === 'Battle') {\r\n      return (\r\n        <Battle\r\n          page={this.changeCurrentPage}\r\n          heroName={this.state.heroName}\r\n          level={this.state.level}\r\n          nextLevel={this.nextLevel}\r\n          setRecord={this.setRecord}\r\n        />\r\n      );\r\n    }\r\n\r\n    if (this.state.currentPage === 'Score') {\r\n      return (\r\n        <Score\r\n          page={this.changeCurrentPage}\r\n          heroName={this.state.heroName}\r\n          level={this.state.level}\r\n          records={this.state.records}\r\n        />\r\n      );\r\n    }\r\n\r\n    return <Spinner />;\r\n  }\r\n\r\n  render() {\r\n    return this.renderCurrentPage();\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Game from './components/Game';\r\n\r\nReactDOM.render(<Game />, document.querySelector('#root'));\r\n"],"sourceRoot":""}